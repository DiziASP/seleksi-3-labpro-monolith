openapi: 3.0.3
info:
  title: Monolith API
  version: 1.0.0
  description: API for Monolith
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/login/:
    get:
      operationId: auth_login_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /auth/logout/:
    get:
      operationId: auth_logout_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/register/:
    get:
      operationId: auth_register_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /history/:
    get:
      operationId: history_retrieve
      tags:
      - history
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /product/{id}/:
    get:
      operationId: product_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - product
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseHistory'
          description: ''
    post:
      operationId: product_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseHistory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/PurchaseHistory'
          description: ''
components:
  schemas:
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    PurchaseHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: string
          maxLength: 100
        total:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        date:
          type: string
          format: date-time
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,98}(?:\.\d{0,2})?$
        user:
          type: integer
      required:
      - date
      - id
      - price
      - product
      - user
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
